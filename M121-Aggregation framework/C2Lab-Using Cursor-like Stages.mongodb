
/*

MongoDB has another movie night scheduled. This time, we polled employees
for their favorite actress or actor, and got these results:

favorites = [
  "Sandra Bullock",
  "Tom Hanks",
  "Julia Roberts",
  "Kevin Spacey",
  "George Clooney"]

For movies released in the USA with a tomatoes.viewer.rating greater than 
or equal to 3, calculate a new field called num_favs that represets 
how many favorites appear in the cast field of the movie.

Sort your results by num_favs, tomatoes.viewer.rating, and title, 
all in descending order.

What is the title of the 25th film in the aggregation result?

Correct answer: "The Heat"
*/
// use aggregations;

let favorites = [
  "Sandra Bullock",
  "Tom Hanks",
  "Julia Roberts",
  "Kevin Spacey",
  "George Clooney"
]

let pipeline;
pipeline = [
  {$project: {
    _id:0, title: 1, 
    "tomatoes.viewer.rating": 1, countries: 1, 
    cast: { $ifNull: [ "$cast", [] ] }, // Needed for the setIntersection
  }},
  {$match: {
    "tomatoes.viewer.rating": { $gte: 3 },
    countries: "USA"
  }},
  {$addFields: {
    num_favs: { 
      $size: {
        $setIntersection: [ 
          "$cast", favorites
        ] 
      }
    }
  }},
  {$sort: { num_favs:-1, "tomatoes.viewer.rating":-1, title: -1} },
  { $skip: 24 },
  { $limit: 1}
]

db.movies.aggregate(pipeline)
// db.movies.aggregate(pipeline).itcount()
